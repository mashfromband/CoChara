import type { Metadata } from "next/types";
import { Inter } from "next/font/google";
import "./globals.css";
import Header from "./components/layout/Header";
import Footer from "./components/layout/Footer";
import AuthProvider from "./providers/AuthProvider";
import { getServerSession } from "next-auth";
import { authOptions } from "@/lib/auth";

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

/**
 * RootLayout (Server Component)
 * - サーバー側でセッションを取得し、AuthProvider(SessionProvider) に初期セッションを渡します。
 * - これによりクライアント側の /api/auth/session フェッチを回避し、
 *   画面遷移時の net::ERR_ABORTED などの不要なエラー発生を抑制します。
 */
export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);

  return (
    <html lang="en">
      <body
        className={`${inter.variable} antialiased flex flex-col min-h-screen`}
      >
        <AuthProvider initialSession={session}>
          <Header />
          <main className="flex-grow pt-14">
            {children}
          </main>
          <Footer />
        </AuthProvider>
      </body>
    </html>
  );
}
